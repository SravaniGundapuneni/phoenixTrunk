<?php
/**
 * The CreateController controller file
 *
 * This controller holds the CreateController array, and is used as an interface to access and change settings
 * in the CreateController array.
 *
 * @category    Toolbox
 * @package     Config
 * @subpackage  Controller
 * @copyright   Copyright (c) 2013 TravelClick, Inc (http://www.travelclick.com)
 * @license     All Rights Reserved
 * @version     Release: 13.5
 * @since       File available since release 13.4
 * @author      A. Tate <atate@travelclick.com>
 * @filesource
 */
namespace DevTools\Controller;

use ZFTool\Controller\CreateController as ZFToolCreate;
use DevTools\Model\Skeleton;
use Zend\Console\ColorInterface as Color;

/**
 * The CreateController controller file
 *
 * This controller holds the CreateController array, and is used as an interface to access and change settings
 * in the CreateController array.
 *
 * @category    Toolbox
 * @package     Config
 * @subpackage  Controller
 * @copyright   Copyright (c) 2013 TravelClick, Inc (http://www.travelclick.com)
 * @license     All Rights Reserved
 * @version     Release: 13.5
 * @since       File available since release 13.4
 * @author      A. Tate <atate@travelclick.com>
 */

class CreateController extends ZFToolCreate
{
    /**
     * moduleAction function
     *
     * @access public
     * 
     */
    public function moduleAction()
    {
        $applicationConfigOld = file_get_contents(getcwd() . '/config/application.config.php');
        $applicationConfig = str_replace("SITE_PATH . '", "':SITE_PATH:", $applicationConfigOld);
        file_put_contents(getcwd() . '/config/application.config.php', $applicationConfig);

        $console = $this->getServiceLocator()->get('console');
        $tmpDir  = sys_get_temp_dir();
        $request = $this->getRequest();
        $name    = $request->getParam('name');
        $path    = rtrim($request->getParam('path'), '/');

        if (empty($path)) {
            $path = '.';
        }

        if (!file_exists("$path/module") || !file_exists("$path/config/application.config.php")) {
            return $this->sendError(
                "The path $path doesn't contain a ZF2 application. I cannot create a module here."
            );
        }
        if (file_exists("$path/module/$name")) {
            return $this->sendError(
                "The module $name already exists."
            );
        }

        $name = ucfirst($name);
        mkdir("$path/module/$name");
        mkdir("$path/module/$name/config");
        mkdir("$path/module/$name/src");
        mkdir("$path/module/$name/src/$name");
        mkdir("$path/module/$name/src/$name/Controller");
        mkdir("$path/module/$name/src/$name/Entity");
        mkdir("$path/module/$name/src/$name/Entity/Admin");
        mkdir("$path/module/$name/src/$name/Model");
        mkdir("$path/module/$name/src/$name/Helper");        
        mkdir("$path/module/$name/src/$name/Form");
        mkdir("$path/module/$name/src/$name/Service");
        mkdir("$path/module/$name/view");

        // Create the Module.php
        file_put_contents("$path/module/$name/Module.php", Skeleton::getModule($name));

        // Create the module.config.php
        file_put_contents("$path/module/$name/config/module.config.php", Skeleton::getModuleConfig($name));

        // Add the module in application.config.php
        $application = require "$path/config/application.config.php";
        if (!in_array($name, $application['modules'])) {
            $application['modules'][] = $name;
            copy ("$path/config/application.config.php", "$path/config/application.config.old");
            $datestamp = date('Y-m-d h:i:s');
            $content = <<<EOD
<?php
/**
 * Configuration file generated by Phoenix DevTools and ZFTool on $datestamp
 * The previous configuration file is stored in application.config.old
 *
 * @see https://github.com/zendframework/ZFTool
 */

EOD;

            $content .= 'return '. Skeleton::exportConfig($application) . ";\n";
            //Reset the Site Path Constant.
            $contentFixed = str_replace("':SITE_PATH:", "SITE_PATH . '", $content);

            file_put_contents("$path/config/application.config.php", $contentFixed);
        }
        if ($path === '.') {
            $console->writeLine("The module $name has been created", Color::GREEN);
        } else {
            $console->writeLine("The module $name has been created in $path", Color::GREEN);
        }
    }
}